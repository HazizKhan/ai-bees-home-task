version: '3.3'
services:
  dev:
    container_name: nestjs_api_dev
    image: nestjs-api-dev:1.0.0
    build:
      context: .
      dockerfile: ./Dockerfile
      target: development
    command: npm run start:dev
    ports:
      - 3000:3000
      - 3001:9229
    expose:
      - 3000
    networks:
      - nesjs-network
    depends_on:
      - mongodb
    volumes:
      - .:/usr/src/app
      - /usr/src/app/node_modules
    restart: unless-stopped
    environment:
      WAIT_HOSTS: mongodb:27017
      PORT: 3000
  mongodb:
    image : mongo:latest
    container_name: mongodb
    volumes:
      - ./database:/data/db
    ports:
      - 27018:27017
    expose:
      - 27018
    networks:
      - nesjs-network
    restart: always

  prod:
    container_name: nestjs_api_prod
    image: nestjs-api-prod:1.0.0
    build:
      context: .
      dockerfile: ./Dockerfile
      target: production
    command: npm run start:prod
    ports:
      - 5000:5000
      - 9229:9229
    networks:
      - nesjs-network
    depends_on:
      - mongodb
    volumes:
      - .:/usr/src/app
      - /usr/src/app/node_modules
    restart: unless-stopped
    environment:
      WAIT_HOSTS: mongodb:27017
      PORT: 5000
  e2e:
    container_name: nestjs_api_e2e
    image: nestjs-api-e2e:1.0.0
    build:
      context: .
      dockerfile: ./Dockerfile
      target: e2e
    command: npm run test:e2e
    ports:
      - 4000:4000
      - 4001:9229
    expose:
      - 4000
    networks:
      - nesjs-network
    depends_on:
      - mongodb
    volumes:
      - .:/usr/src/app
      - /usr/src/app/node_modules
    environment:
      WAIT_HOSTS: mongodb:27017
      PORT: 4000
networks:
    nesjs-network:
      driver: bridge